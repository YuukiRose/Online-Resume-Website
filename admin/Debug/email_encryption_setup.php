<?php
/**
 * Email Configuration Encryption Tool
 * Encrypts SMTP email settings using the secure key system and saves to E.env
 */

require_once '../../config/SecureKeyManager.php';

class EmailEncryptionManager {
    private $encryptionKey;
    private $envPath;
    
    public function __construct() {
        // Initialize the key manager
        SecureKeyManager::init();
        $this->encryptionKey = SecureKeyManager::getKey('encryption_key');
        $this->envPath = __DIR__ . '/../../secure/E.env';
    }
    
    /**
     * Encrypt email configuration and save to E.env
     */
    public function encryptEmailConfig($config) {
        $encryptedConfig = [];
        
        foreach ($config as $key => $value) {
            if (!empty($value)) {
                $encryptedConfig[$key] = $this->encrypt($value);
            }
        }
        
        return $this->saveToEnvFile($encryptedConfig);
    }
    
    /**
     * AES-256-GCM encryption
     */
    private function encrypt($data) {
        $cipher = 'aes-256-gcm';
        $iv = random_bytes(16);
        $tag = '';
        
        $encrypted = openssl_encrypt($data, $cipher, $this->encryptionKey, OPENSSL_RAW_DATA, $iv, $tag);
        
        if ($encrypted === false) {
            throw new Exception('Encryption failed');
        }
        
        // Combine IV + tag + encrypted data and encode
        return base64_encode($iv . $tag . $encrypted);
    }
    
    /**
     * Save encrypted configuration to E.env file
     */
    private function saveToEnvFile($encryptedConfig) {
        $envContent = "# Encrypted Email Configuration\n";
        $envContent .= "# Generated on " . date('Y-m-d H:i:s') . "\n";
        $envContent .= "# DO NOT EDIT THIS FILE MANUALLY\n\n";
        
        foreach ($encryptedConfig as $key => $encryptedValue) {
            $envContent .= strtoupper($key) . "=" . $encryptedValue . "\n";
        }
        
        // Ensure secure directory exists
        $secureDir = dirname($this->envPath);
        if (!is_dir($secureDir)) {
            mkdir($secureDir, 0755, true);
        }
        
        $result = file_put_contents($this->envPath, $envContent);
        
        if ($result === false) {
            throw new Exception('Failed to write E.env file');
        }
        
        return true;
    }
    
    /**
     * Load and decrypt email configuration from E.env
     */
    public function loadEmailConfig() {
        if (!file_exists($this->envPath)) {
            return false;
        }
        
        $envContent = file_get_contents($this->envPath);
        $lines = explode("\n", $envContent);
        $config = [];
        
        foreach ($lines as $line) {
            $line = trim($line);
            if (empty($line) || strpos($line, '#') === 0) {
                continue;
            }
            
            if (strpos($line, '=') !== false) {
                list($key, $value) = explode('=', $line, 2);
                $config[strtolower($key)] = $this->decrypt($value);
            }
        }
        
        return $config;
    }
    
    /**
     * AES-256-GCM decryption
     */
    private function decrypt($encryptedData) {
        $cipher = 'aes-256-gcm';
        $data = base64_decode($encryptedData);
        
        if ($data === false || strlen($data) < 32) {
            throw new Exception('Invalid encrypted data');
        }
        
        $iv = substr($data, 0, 16);
        $tag = substr($data, 16, 16);
        $encrypted = substr($data, 32);
        
        $decrypted = openssl_decrypt($encrypted, $cipher, $this->encryptionKey, OPENSSL_RAW_DATA, $iv, $tag);
        
        if ($decrypted === false) {
            throw new Exception('Decryption failed');
        }
        
        return $decrypted;
    }
    
    /**
     * Test email configuration
     */
    public function testEmailConfig() {
        try {
            $config = $this->loadEmailConfig();
            if (!$config) {
                return ['success' => false, 'message' => 'No encrypted email configuration found'];
            }
            
            // Basic validation
            $required = ['smtp_host', 'smtp_port', 'smtp_username', 'smtp_password', 'from_email'];
            foreach ($required as $field) {
                if (empty($config[$field])) {
                    return ['success' => false, 'message' => "Missing required field: $field"];
                }
            }
            
            return [
                'success' => true, 
                'message' => 'Email configuration loaded successfully',
                'config' => array_merge($config, ['smtp_password' => '***HIDDEN***']) // Hide password in test
            ];
            
        } catch (Exception $e) {
            return ['success' => false, 'message' => 'Error: ' . $e->getMessage()];
        }
    }
}

// Handle form submission
$message = '';
$messageType = '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    try {
        $emailManager = new EmailEncryptionManager();
        
        if (isset($_POST['action'])) {
            switch ($_POST['action']) {
                case 'encrypt':
                    $config = [
                        'smtp_host' => $_POST['smtp_host'] ?? '',
                        'smtp_port' => $_POST['smtp_port'] ?? '',
                        'smtp_username' => $_POST['smtp_username'] ?? '',
                        'smtp_password' => $_POST['smtp_password'] ?? '',
                        'from_email' => $_POST['from_email'] ?? '',
                        'from_name' => $_POST['from_name'] ?? '',
                        'encryption' => $_POST['encryption'] ?? 'ssl'
                    ];
                    
                    $emailManager->encryptEmailConfig($config);
                    $message = 'Email configuration encrypted and saved to E.env successfully!';
                    $messageType = 'success';
                    break;
                    
                case 'test':
                    $result = $emailManager->testEmailConfig();
                    $message = $result['message'];
                    $messageType = $result['success'] ? 'success' : 'error';
                    
                    if ($result['success'] && isset($result['config'])) {
                        $testConfig = $result['config'];
                    }
                    break;
                    
                case 'load':
                    $loadedConfig = $emailManager->loadEmailConfig();
                    if ($loadedConfig) {
                        $message = 'Email configuration loaded from E.env';
                        $messageType = 'success';
                    } else {
                        $message = 'No encrypted email configuration found';
                        $messageType = 'error';
                    }
                    break;
            }
        }
    } catch (Exception $e) {
        $message = 'Error: ' . $e->getMessage();
        $messageType = 'error';
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Email Configuration Encryption - Luthor Admin</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #2C3E50 0%, #3498DB 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2em;
            margin-bottom: 10px;
        }
        
        .header p {
            opacity: 0.9;
        }
        
        .content {
            padding: 30px;
        }
        
        .message {
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            font-weight: 500;
        }
        
        .message.success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .message.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        .form-section {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 10px;
            margin-bottom: 25px;
        }
        
        .form-section h3 {
            color: #2C3E50;
            margin-bottom: 20px;
            font-size: 1.3em;
        }
        
        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 15px;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #2C3E50;
            font-weight: 500;
        }
        
        .form-group input,
        .form-group select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 14px;
            transition: border-color 0.3s ease;
        }
        
        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: #3498DB;
            box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);
        }
        
        .btn {
            background: #3498DB;
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.3s ease;
            margin-right: 10px;
            margin-bottom: 10px;
        }
        
        .btn:hover {
            background: #2980B9;
            transform: translateY(-1px);
        }
        
        .btn.btn-secondary {
            background: #6c757d;
        }
        
        .btn.btn-secondary:hover {
            background: #5a6268;
        }
        
        .btn.btn-success {
            background: #28a745;
        }
        
        .btn.btn-success:hover {
            background: #218838;
        }
        
        .config-display {
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 20px;
            margin-top: 20px;
        }
        
        .config-item {
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px solid #eee;
        }
        
        .config-item:last-child {
            border-bottom: none;
        }
        
        .config-key {
            font-weight: 500;
            color: #2C3E50;
        }
        
        .config-value {
            color: #6c757d;
            font-family: monospace;
        }
        
        .back-link {
            text-align: center;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #dee2e6;
        }
        
        .back-link a {
            color: #3498DB;
            text-decoration: none;
            font-weight: 500;
        }
        
        .back-link a:hover {
            text-decoration: underline;
        }
        
        .security-notice {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            color: #856404;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        
        .security-notice strong {
            display: block;
            margin-bottom: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>🔐 Email Configuration Encryption</h1>
            <p>Secure SMTP configuration management with AES-256-GCM encryption</p>
        </div>
        
        <div class="content">
            <div class="security-notice">
                <strong>🛡️ Security Notice:</strong>
                This tool encrypts your SMTP credentials using the secure key system and stores them in the E.env file. 
                Your email passwords will be protected with military-grade AES-256-GCM encryption.
            </div>
            
            <?php if ($message): ?>
                <div class="message <?php echo $messageType; ?>">
                    <?php echo htmlspecialchars($message); ?>
                </div>
            <?php endif; ?>
            
            <!-- Email Configuration Form -->
            <div class="form-section">
                <h3>📧 SMTP Configuration</h3>
                <form method="POST">
                    <input type="hidden" name="action" value="encrypt">
                    
                    <div class="form-grid">
                        <div class="form-group">
                            <label for="smtp_host">SMTP Host</label>
                            <input type="text" id="smtp_host" name="smtp_host" 
                                   value="<?php echo isset($loadedConfig['smtp_host']) ? htmlspecialchars($loadedConfig['smtp_host']) : 'smtp.livemail.co.uk'; ?>" 
                                   placeholder="smtp.example.com" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="smtp_port">SMTP Port</label>
                            <input type="number" id="smtp_port" name="smtp_port" 
                                   value="<?php echo isset($loadedConfig['smtp_port']) ? htmlspecialchars($loadedConfig['smtp_port']) : '465'; ?>" 
                                   placeholder="465" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="smtp_username">SMTP Username</label>
                            <input type="text" id="smtp_username" name="smtp_username" 
                                   value="<?php echo isset($loadedConfig['smtp_username']) ? htmlspecialchars($loadedConfig['smtp_username']) : 'admin@webbr.co.uk'; ?>" 
                                   placeholder="admin@example.com" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="smtp_password">SMTP Password</label>
                            <input type="password" id="smtp_password" name="smtp_password" 
                                   placeholder="Enter SMTP password" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="from_email">From Email</label>
                            <input type="email" id="from_email" name="from_email" 
                                   value="<?php echo isset($loadedConfig['from_email']) ? htmlspecialchars($loadedConfig['from_email']) : 'admin@webbr.co.uk'; ?>" 
                                   placeholder="noreply@example.com" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="from_name">From Name</label>
                            <input type="text" id="from_name" name="from_name" 
                                   value="<?php echo isset($loadedConfig['from_name']) ? htmlspecialchars($loadedConfig['from_name']) : 'Portfolio Admin'; ?>" 
                                   placeholder="Your Website Name" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="encryption">Encryption Type</label>
                            <select id="encryption" name="encryption" required>
                                <option value="ssl" <?php echo (isset($loadedConfig['encryption']) && $loadedConfig['encryption'] === 'ssl') ? 'selected' : 'selected'; ?>>SSL</option>
                                <option value="tls" <?php echo (isset($loadedConfig['encryption']) && $loadedConfig['encryption'] === 'tls') ? 'selected' : ''; ?>>TLS</option>
                                <option value="none" <?php echo (isset($loadedConfig['encryption']) && $loadedConfig['encryption'] === 'none') ? 'selected' : ''; ?>>None</option>
                            </select>
                        </div>
                    </div>
                    
                    <div style="margin-top: 20px;">
                        <button type="submit" class="btn">🔐 Encrypt & Save Configuration</button>
                    </div>
                </form>
            </div>
            
            <!-- Management Actions -->
            <div class="form-section">
                <h3>🛠️ Management Actions</h3>
                <form method="POST" style="display: inline;">
                    <input type="hidden" name="action" value="load">
                    <button type="submit" class="btn btn-secondary">📂 Load Existing Configuration</button>
                </form>
                
                <form method="POST" style="display: inline;">
                    <input type="hidden" name="action" value="test">
                    <button type="submit" class="btn btn-success">🧪 Test Configuration</button>
                </form>
            </div>
            
            <?php if (isset($testConfig)): ?>
            <div class="config-display">
                <h4>📋 Current Configuration</h4>
                <?php foreach ($testConfig as $key => $value): ?>
                    <div class="config-item">
                        <span class="config-key"><?php echo ucwords(str_replace('_', ' ', $key)); ?>:</span>
                        <span class="config-value"><?php echo htmlspecialchars($value); ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
            <?php endif; ?>
            
            <div class="back-link">
                <a href="../debug_dashboard.php">← Back to Debug Dashboard</a>
            </div>
        </div>
    </div>
</body>
</html>
